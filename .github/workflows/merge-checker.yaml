name: Merge Checker

on:
  workflow_dispatch:
  workflow_call:

jobs:
  checker:
    environment: local
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.DIAGRID_BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.DIAGRID_BOT_APPLICATION_PRIVATE_KEY }}

      - name: Checker
        id: merge-checker
        run: |
          echo "Testing Merge Checker"
          echo "Token: ${{ steps.get_workflow_token.outputs.token }}"
          echo "Event: ${{ github.event_name }}"


      - name: Update check
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.get_workflow_token.outputs.token }}
          script: |
            // 1. Find the check run by name and head SHA
            const checkRuns = await github.rest.checks.listForRef({
              ...context.repo,
              ref: context.sha,
            });

            const checkRun = checkRuns.data.check_runs.find(run => run.name === 'Merge Checker');

            if (!checkRun) {
              throw new Error('Check run not found');
            }

            await github.rest.checks.update({
              ...context.repo,
              check_run_id: checkRun.id,
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'failure',
              output: {
                title: 'Merge Checker',
                summary: 'Merge Checker completed successfully.',
                text: `Event: ${context.eventName}\nPull Request: ${context.payload.pull_request.number}\nLabels: ${JSON.stringify(context.payload.pull_request.labels)}`
              }
            });
            console.log('Check run created:', checkRun.data);

