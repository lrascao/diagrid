name: Merge Checker Scheduler

on:
  # schedule:
  #   - cron: '*/1 * * * *'  # Runs every 1 minute
  workflow_dispatch:       # Allow manual triggering

jobs:
  check-all-prs:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      checks: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.DIAGRID_BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.DIAGRID_BOT_APPLICATION_PRIVATE_KEY }}

      - name: Find in-progress check runs
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.get_workflow_token.outputs.token }}
          script: |
            # This script checks all open pull requests for in-progress check runs
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
            });

            for (const pr of pulls) {
              const sha = pr.head.sha;
              console.log(`üîç Checking PR #${pr.number} with SHA ${sha}`);

              # const { data: checkRuns } = await github.rest.checks.listForRef({
              #   owner: context.repo.owner,
              #   repo: context.repo.repo,
              #   ref: sha,
              #   status: 'in_progress',
              # });

              # for (const check of checkRuns.check_runs) {
              #   if (check.name !== 'Merge Checker') continue; // optional: filter by name
              #   console.log(`üü° Found in-progress check run: ${check.id} (${check.name})`);

              #   const response = await github.rest.actions.createWorkflowDispatch({
              #       owner: context.repo.owner,
              #       repo: context.repo.repo,
              #       workflow_id: 'merge-checker.yaml',
              #       ref: 'main',
              #       inputs: {
              #           "check-run-id": check.id,
              #           "pr-number": pr.number,
              #       }
              #     });

              #   console.log(`üîÑ Triggered merge-checker workflow for check run ID: ${check.id}`);
              #   break;  // Exit after finding the first in-progress check run
              # }
            }

